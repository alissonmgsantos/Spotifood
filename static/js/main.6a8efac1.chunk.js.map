{"version":3,"sources":["stores/modules/types.js","stores/modules/playlist/reducer.js","stores/modules/rootReducer.js","services/auth.js","config/API.js","stores/modules/playlist/sagas.js","stores/modules/rootSaga.js","stores/index.js","components/shared/Logo/styles.js","components/shared/Logo/index.js","pages/Signin/styles.js","pages/Signin/index.js","config/SPOTIFY.js","components/Filters/styles.js","components/Filters/index.js","stores/modules/playlist/actions.js","components/FeaturedPlaylists/styles.js","components/FeaturedPlaylists/index.js","pages/Home/styles.js","pages/Home/index.js","pages/routes.js","App.js","index.js"],"names":["Types","playlist","index","REQUEST","SUCCESS","FAILURE","INITIAL_STATE","data","loading","success","pagination","offset","limit","total","combineReducers","state","action","produce","draft","type","payload","playlists","items","KEY","getSession","localStorage","getItem","JSON","parse","access_token","API_MOCKY","axios","create","baseURL","headers","Accept","API_SPOTIFY","interceptors","request","use","config","a","Authorization","root","get","params","response","put","status","removeItem","window","location","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","useStyles","makeStyles","theme","title","color","fontWeight","Logo","direction","classes","Box","display","flexDirection","alignItems","Icon","fontSize","Typography","variant","className","height","btn_singin","lineHeight","borderRadius","padding","background","Signin","history","useHistory","useEffect","item","result","hash","substring","split","reduce","parm","parts","decodeURIComponent","setItem","stringify","push","Grid","container","justify","mt","href","process","marginBottom","Filters","onFilters","filters","useState","locale","setLocale","country","setCountry","timestamp","format","Date","map","key","prevState","values","FormControl","fullWidth","Autocomplete","id","disableClearable","options","size","getOptionLabel","option","name","onChange","event","newValue","Object","assign","value","renderInput","TextField","label","defaultValue","target","inputProps","min","max","playlistActions","breakpoints","down","justifyContent","card","width","media","FeaturedPlaylists","SPOTIFY_PLAYLISTS","useSelector","dispatch","useDispatch","setPlaylists","filter","setFilter","interval","setInterval","clearInterval","component","mb","gutterBottom","e","toLowerCase","indexOf","onSearch","spacing","length","Card","elevation","CardMedia","image","images","url","CardContent","description","CircularProgress","drawer","up","flexShrink","appBar","boxShadow","marginLeft","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","Home","props","mobileOpen","setMobileOpen","setFilters","handleDrawerToggle","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","onClick","disabled","Hidden","smUp","implementation","Drawer","open","onClose","paper","ModalProps","keepMounted","xsDown","Routes","path","exact","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a8efac1.chunk.js","sourcesContent":["const Types = {\r\n  playlist: {\r\n    index: {\r\n      REQUEST: 'PLAYLIST_INDEX_REQUEST',\r\n      SUCCESS: 'PLAYLIST_INDEX_SUCCESS',\r\n    },\r\n    FAILURE: 'PLAYLIST_FAILURE',\r\n  },\r\n};\r\n\r\nexport default Types;\r\n","import produce from 'immer';\r\nimport Types from '../types';\r\n\r\nconst INITIAL_STATE = {\r\n  data: [],\r\n  loading: false,\r\n  success: false,\r\n  pagination: { offset: 1, limit: 6, total: 0 },\r\n};\r\n\r\nexport default function playlist(state = INITIAL_STATE, action) {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      /**================================================================================\r\n       * INDEX\r\n       * =============================================================================**/\r\n      case Types.playlist.index.REQUEST: {\r\n        draft.loading = true;\r\n        break;\r\n      }\r\n      case Types.playlist.index.SUCCESS: {\r\n        const { offset, limit, total } = action.payload.playlists;\r\n        draft.data = action.payload.playlists.items;\r\n        draft.pagination = { offset, limit, total };\r\n        draft.loading = false;\r\n        draft.success = true;\r\n        break;\r\n      }\r\n      /**================================================================================\r\n       * FAILURE\r\n       * =============================================================================**/\r\n      case Types.playlist.FAILURE: {\r\n        draft.loading = false;\r\n        break;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport playlist from './playlist/reducer';\r\n\r\nexport default combineReducers({ playlist });\r\n","const KEY = 'AUTH_SPOTIFOOD';\r\n\r\nexport const setSession = item => {\r\n  return localStorage.setItem(KEY, JSON.stringify(item));\r\n};\r\n\r\nexport const getSession = () => {\r\n  if (localStorage.getItem(KEY)) {\r\n    return `Bearer ${JSON.parse(localStorage.getItem(KEY)).access_token}`;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const removeSession = () => {\r\n  if (localStorage.getItem(KEY)) {\r\n    return localStorage.removeItem(KEY);\r\n  }\r\n  return null;\r\n};\r\n","import axios from 'axios';\r\nimport { getSession } from '../services/auth';\r\n\r\nexport const API_MOCKY = axios.create({\r\n  baseURL: 'http://www.mocky.io/v2',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n  },\r\n});\r\n\r\nexport const API_SPOTIFY = axios.create({\r\n  baseURL: 'https://api.spotify.com',\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nAPI_SPOTIFY.interceptors.request.use(async config => {\r\n  const access_token = getSession();\r\n  if (access_token) {\r\n    config.headers.Authorization = `${access_token}`;\r\n  }\r\n  return config;\r\n});\r\n","import { all, takeLatest, put } from 'redux-saga/effects';\r\nimport { API_SPOTIFY } from '../../../config/API';\r\nimport Types from '../types';\r\nimport { removeSession } from '../../../services/auth';\r\n\r\nfunction* index({ payload }) {\r\n  try {\r\n    const response = yield API_SPOTIFY.get('/v1/browse/featured-playlists', {\r\n      params: payload,\r\n    });\r\n    yield put({ type: Types.playlist.index.SUCCESS, payload: response.data });\r\n  } catch (err) {\r\n    if (err.response.status === 401) {\r\n      yield put({ type: Types.playlist.FAILURE });\r\n      yield removeSession();\r\n      window.location = '/';\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* root() {\r\n  yield all([takeLatest(Types.playlist.index.REQUEST, index)]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport playlist from './playlist/sagas';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([playlist()]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './modules/rootReducer';\r\nimport rootSaga from './modules/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    color: '#333',\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Box, Icon, Typography } from '@material-ui/core';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport useStyles from './styles';\r\n\r\nconst Logo = ({ direction }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection={direction} alignItems=\"center\">\r\n      <Icon fontSize=\"large\">\r\n        <AudiotrackIcon fontSize=\"large\" color=\"error\" />\r\n      </Icon>\r\n      <Typography variant=\"h4\" className={classes.title}>\r\n        Spotifood\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100vh',\r\n  },\r\n  btn_singin: {\r\n    fontSize: '16px',\r\n    lineHeight: '1',\r\n    borderRadius: '500px',\r\n    padding: '19px 56px 21px',\r\n    background: '#1DB954',\r\n    color: '#fff',\r\n    '&:hover': {\r\n      background: '#1ED760',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useEffect } from 'react';\r\nimport { Typography, Grid, Box } from '@material-ui/core';\r\nimport Logo from '../../components/shared/Logo';\r\n\r\nimport useStyles from './styles';\r\nimport {\r\n  AUTHORIZE_ENDPOINT,\r\n  CLIENT_ID,\r\n  REDIRECT_URI,\r\n  RESPONSE_TYPE,\r\n} from '../../config/SPOTIFY';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setSession, getSession } from '../../services/auth';\r\n\r\nconst Signin = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const result = window.location.hash\r\n      .substring(1)\r\n      .split('&')\r\n      .reduce((data, parm) => {\r\n        if (parm) {\r\n          var parts = parm.split('=');\r\n          data[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return data;\r\n      }, {});\r\n    if (result.access_token) {\r\n      setSession(result);\r\n      history.push('/home');\r\n    }\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (getSession()) {\r\n      history.push('/home');\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Logo direction=\"column\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h6\">\r\n            Encontre aqui aquela a playlist ideal para o seu dia.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Box mt={5}>\r\n            <a\r\n              className={classes.btn_singin}\r\n              href={`${AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`}>\r\n              Entrar com conta spotify\r\n            </a>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","export const AUTHORIZE_ENDPOINT =\r\n  process.env.REACT_APP_AUTHORIZE_ENDPOINT ||\r\n  'https://accounts.spotify.com/authorize';\r\nexport const CLIENT_ID =\r\n  process.env.REACT_APP_CLIENT_ID || '3579712af8ae42d1959b4a1df703730c';\r\nexport const REDIRECT_URI =\r\n  process.env.REACT_APP_REDIRECT_URI || 'http://localhost:3000';\r\nexport const RESPONSE_TYPE = process.env.REACT_APP_RESPONSE_TYPE || 'token';\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: 10,\r\n    '& .MuiFormControl-root': {\r\n      marginBottom: '1rem',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TextField, FormControl } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nimport { API_MOCKY } from '../../config/API';\r\nimport useStyles from '../Filters/styles';\r\nimport { format } from 'date-fns';\r\n\r\nconst Filters = ({ onFilters, filters }) => {\r\n  const classes = useStyles();\r\n  const [locale, setLocale] = useState(null);\r\n  const [country, setCountry] = useState(null);\r\n  const timestamp = format(new Date(), \"yyyy-MM-dd'T'HH:mm\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { data } = await API_MOCKY.get('/5a25fade2e0000213aa90776');\r\n      data.filters.map((item, key) => {\r\n        setLocale(prevState => data.filters[0].values);\r\n        setCountry(prevState => data.filters[1].values);\r\n        return true;\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form>\r\n        <FormControl fullWidth>\r\n          <Autocomplete\r\n            id=\"locale\"\r\n            disableClearable\r\n            options={locale || []}\r\n            size=\"small\"\r\n            getOptionLabel={option => option.name}\r\n            onChange={(event, newValue) =>\r\n              onFilters(\r\n                Object.assign({\r\n                  ...filters,\r\n                  locale: newValue.value,\r\n                })\r\n              )\r\n            }\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Idioma\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n              />\r\n            )}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth>\r\n          <Autocomplete\r\n            id=\"country\"\r\n            disableClearable\r\n            options={country || []}\r\n            size=\"small\"\r\n            getOptionLabel={option => option.name}\r\n            onChange={(event, newValue) =>\r\n              onFilters(\r\n                Object.assign({\r\n                  ...filters,\r\n                  country: newValue.value,\r\n                })\r\n              )\r\n            }\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                label=\"País\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n              />\r\n            )}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            id=\"timestamp\"\r\n            color=\"secondary\"\r\n            label=\"Data e Horário\"\r\n            type=\"datetime-local\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            defaultValue={timestamp}\r\n            onChange={event =>\r\n              onFilters(\r\n                Object.assign({\r\n                  ...filters,\r\n                  timestamp: format(\r\n                    new Date(event.target.value),\r\n                    \"yyyy-MM-dd'T'HH:mm:ss\"\r\n                  ),\r\n                })\r\n              )\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            id=\"offset\"\r\n            name=\"offset\"\r\n            label=\"Página\"\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            type=\"number\"\r\n            onChange={event =>\r\n              onFilters(\r\n                Object.assign({ ...filters, offset: event.target.value || 1 })\r\n              )\r\n            }\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            id=\"limit\"\r\n            name=\"limit\"\r\n            color=\"secondary\"\r\n            label=\"Quantidade\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            type=\"number\"\r\n            inputProps={{ min: 1, max: 50 }}\r\n            onChange={event =>\r\n              onFilters(\r\n                Object.assign({ ...filters, limit: event.target.value || 12 })\r\n              )\r\n            }\r\n          />\r\n        </FormControl>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  onFilters: PropTypes.func,\r\n};\r\n\r\nexport default Filters;\r\n","import Types from '../types';\r\n\r\nexport const playlistActions = {\r\n  index: data => {\r\n    return {\r\n      type: Types.playlist.index.REQUEST,\r\n      payload: data,\r\n    };\r\n  },\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('sm')]: {\r\n      '& .MuiGrid-container': {\r\n        justifyContent: 'center',\r\n      },\r\n    },\r\n  },\r\n\r\n  title: {\r\n    color: '#333',\r\n    fontWeight: 600,\r\n  },\r\n\r\n  card: {\r\n    width: 320,\r\n    height: 450,\r\n  },\r\n  media: {\r\n    height: 320,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { playlistActions } from '../../stores/modules/playlist/actions';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Box,\r\n  Icon,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\nconst FeaturedPlaylists = ({ filters }) => {\r\n  const classes = useStyles();\r\n  const SPOTIFY_PLAYLISTS = useSelector(state => state.playlist);\r\n  const dispatch = useDispatch();\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [filter, setFilter] = useState(filters);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !SPOTIFY_PLAYLISTS.success ||\r\n      JSON.stringify(filter) !== JSON.stringify(filters)\r\n    ) {\r\n      dispatch(playlistActions.index(filters));\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      dispatch(playlistActions.index(filters));\r\n    }, 30000);\r\n    setPlaylists(prevState => SPOTIFY_PLAYLISTS.data);\r\n    setFilter(prevState => filters);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dispatch, SPOTIFY_PLAYLISTS, filters, filter]);\r\n\r\n  const onSearch = event => {\r\n    const filter = SPOTIFY_PLAYLISTS.data.filter(playlist => {\r\n      return playlist.name.toLowerCase().indexOf(event.toLowerCase()) >= 0;\r\n    });\r\n    return setPlaylists(prevState => filter);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        component={Box}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        mb={4}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" gutterBottom className={classes.title}>\r\n            Destaques\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            color=\"secondary\"\r\n            id=\"search\"\r\n            label=\"Buscar\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"search\"\r\n            onChange={e => onSearch(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container justify=\"flex-start\" spacing={3}>\r\n        {playlists.length > 0 &&\r\n          playlists.map((playlist, key) => (\r\n            <Grid key={key} item>\r\n              <Card className={classes.card} elevation={0}>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={playlist.images[0].url}\r\n                  title={`Image - ${playlist.name}`}\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {playlist.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\">\r\n                    {playlist.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      {/* LOADING */}\r\n      {SPOTIFY_PLAYLISTS.loading && (\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          flexDirection=\"column\">\r\n          <CircularProgress color=\"secondary\" size={64} />\r\n        </Box>\r\n      )}\r\n      {/* PLAYLIST EMPTY */}\r\n      {SPOTIFY_PLAYLISTS.success && playlists.length < 1 && (\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          flexDirection=\"column\">\r\n          <Icon fontSize=\"large\">\r\n            <AudiotrackIcon fontSize=\"large\" color=\"error\" />\r\n          </Icon>\r\n          <Typography color=\"textSecondary\">\r\n            Nenhuma playlist encontrada.\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeaturedPlaylists;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    background: '#fafafa',\r\n    boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2)',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Filters from '../../components/Filters';\r\nimport FeaturedPlaylists from '../../components/FeaturedPlaylists';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport Logo from '../../components/shared/Logo';\r\nimport useStyles from './styles';\r\n\r\nconst Home = props => {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    locale: 'pt_BR',\r\n    country: 'BR',\r\n    offset: 1,\r\n    limit: 6,\r\n    total: 0,\r\n  });\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Logo direction=\"column\" />\r\n      <Filters\r\n        filters={filters}\r\n        onFilters={values => setFilters(prevState => values)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\">\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={handleDrawerToggle}\r\n                className={classes.menuButton}>\r\n                <MenuIcon color=\"action\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <div className={classes.menuButton}>\r\n                <Logo direction=\"row\" />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" disabled>\r\n                <PersonOutlineIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer}>\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}>\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open>\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <FeaturedPlaylists filters={filters} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Signin from './Signin';\r\nimport Home from './Home';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Signin} />\r\n        <Route path=\"/home\" exact component={Home} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './stores';\nimport Routes from './pages/routes';\n\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}